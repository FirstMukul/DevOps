- hosts: localhost
  connection: local
  gather_facts: False

  pre_tasks:
    - name: Provision new EC2 instance
      git:
        repo: 'Name Your git repo here'
        dest: /home/ec2-user/.ansible/git
        update: yes
      register: git_var
    - debug: var=git_var

    - name: Build Packages using maven
      shell: mvn -f /home/ec2-user/.ansible/git clean install
      register: maven_pck
    - debug: var=maven_pck

    - name: Check if the build file exists
      local_action: stat path=/home/ec2-user/.ansible/git/target/ec2-docker.war
      register: file
      ignore_errors: True

    - name: copy file if it exists
      copy: src=/home/ec2-user/.ansible/git/target/ec2-docker.war dest=/home/ec2-user/.ansible/git/configs/ec2-docker.war
      when: file.stat.exists

    - name: upload directory to nexus
      shell: zip -r /home-ec2-user/.ansible/git/nexusArtifacts.zip /home/ec2-user/.ansible/git/configs
      command: curl -v -u admin:admin123 --upload-file /home-ec2-user/.ansible/git/nexusArtifacts.zip http://IP_HERE/nexus/content/repositories/123/demo/hello-world/5.0/configs/

    - name: Create Jira Ticket
      shell: sh /home/ec2-user/.ansible/playbook/git/createTicket.sh
      register: ticket
    - debug: var=ticket

    - name: Create New EC2 Machine
      ec2:
        aws_access_key: YourAccessKey
        aws_secret_key: YourSecretKey
        key_name: Build
        group: testgrp
        instance_type: t2.micro
        image: ami-123456
        region: us-east-1
        wait: yes
        wait_timeout: 500
        vpc_subnet_id: subnet-123456
        assign_public_ip: yes
        instance_tags:
          Name: WebApp-Server
      register: ec2
    - debug: var=ec2
    - local_action: copy content="{{ ec2 }}" dest="~/.ansible/properties/property.txt"

    - name: Check for public IP
      shell: awk -F, '/public_ip/{print $4}' /home/ec2-user/.ansible/properties/property.txt | awk -F ":"  '{print $NF}'  | tr -d '"' > /home/ec2-user/.ansible/properties/ip.txt


    - name: Create Docker Machine
      shell: ssh -i /home/ec2-user/key/Demo.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ec2-user@${docker_IP} "cd /home/ec2-user/docker &&  docker build -f Dockerfile -t tomcat:v1 . && docker run -it -d -p 9991:8080 tomcat:v1 "
      register: Docker
    - debug: var=Docker






